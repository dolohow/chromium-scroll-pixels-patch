https://code.google.com/p/chromium/issues/detail?id=143164
http://src.chromium.org/viewvc/chrome?view=rev&revision=167590

Index: chrome/browser/chromeos/login/login_utils.cc
diff --git a/chrome/browser/chromeos/login/login_utils.cc b/chrome/browser/chromeos/login/login_utils.cc
index 04dc5e28aeef71c7625622b98907d49c8d47461d..1d6b42bf163141e949132e6578970aeaa5b6a698 100644
--- a/chrome/browser/chromeos/login/login_utils.cc
+++ b/chrome/browser/chromeos/login/login_utils.cc
@@ -774,7 +774,6 @@ std::string LoginUtilsImpl::GetOffTheRecordCommandLine(
       ::switches::kGpuStartupDialog,
       ::switches::kHasChromeOSKeyboard,
       ::switches::kLoginProfile,
-      ::switches::kScrollPixels,
       ::switches::kNaturalScrollDefault,
       ::switches::kNoFirstRun,
       ::switches::kNoSandbox,
Index: content/browser/renderer_host/render_widget_host_view_gtk.cc
diff --git a/content/browser/renderer_host/render_widget_host_view_gtk.cc b/content/browser/renderer_host/render_widget_host_view_gtk.cc
index 0ecc880ce29d1ffed600da19a81e19d32d49e0bc..a6979bc639727dd91444928303bf09085bd95778 100644
--- a/content/browser/renderer_host/render_widget_host_view_gtk.cc
+++ b/content/browser/renderer_host/render_widget_host_view_gtk.cc
@@ -456,27 +456,6 @@ class RenderWidgetHostViewGtkWidget {
     return TRUE;
   }
 
-  // Allow the vertical scroll delta to be overridden from the command line.
-  // This will allow us to test more easily to discover the amount
-  // (either hard coded or computed) that's best.
-  static float GetScrollPixelsPerTick() {
-    static float scroll_pixels = -1;
-    if (scroll_pixels < 0) {
-      // TODO(brettw): Remove the command line switch (crbug.com/63525)
-      scroll_pixels = kDefaultScrollPixelsPerTick;
-      CommandLine* command_line = CommandLine::ForCurrentProcess();
-      std::string scroll_pixels_option =
-          command_line->GetSwitchValueASCII(switches::kScrollPixels);
-      if (!scroll_pixels_option.empty()) {
-        double v;
-        if (base::StringToDouble(scroll_pixels_option, &v))
-          scroll_pixels = static_cast<float>(v);
-      }
-      DCHECK_GT(scroll_pixels, 0);
-    }
-    return scroll_pixels;
-  }
-
   // Return the net up / down (or left / right) distance represented by events
   // in the  events will be removed from the queue. We only look at the top of
   // queue...any other type of event will cause us not to look farther.
@@ -522,7 +501,7 @@ class RenderWidgetHostViewGtkWidget {
       gdk_event_put(event);
       gdk_event_free(event);
     }
-    return num_clicks * GetScrollPixelsPerTick();
+    return num_clicks * kDefaultScrollPixelsPerTick;
   }
 
   static gboolean OnMouseScrollEvent(GtkWidget* widget,
@@ -546,15 +525,15 @@ class RenderWidgetHostViewGtkWidget {
     if (event->direction == GDK_SCROLL_UP ||
         event->direction == GDK_SCROLL_DOWN) {
       if (event->direction == GDK_SCROLL_UP)
-        web_event.deltaY = GetScrollPixelsPerTick();
+        web_event.deltaY = kDefaultScrollPixelsPerTick;
       else
-        web_event.deltaY = -GetScrollPixelsPerTick();
+        web_event.deltaY = -kDefaultScrollPixelsPerTick;
       web_event.deltaY += GetPendingScrollDelta(true, event->state);
     } else {
       if (event->direction == GDK_SCROLL_LEFT)
-        web_event.deltaX = GetScrollPixelsPerTick();
+        web_event.deltaX = kDefaultScrollPixelsPerTick;
       else
-        web_event.deltaX = -GetScrollPixelsPerTick();
+        web_event.deltaX = -kDefaultScrollPixelsPerTick;
       web_event.deltaX += GetPendingScrollDelta(false, event->state);
     }
     RenderWidgetHostImpl::From(
Index: content/public/common/content_switches.cc
diff --git a/content/public/common/content_switches.cc b/content/public/common/content_switches.cc
index 555988346f4ec03b15b751c2f826855891010c5d..87c25655f62e128b94faef6f0efe043c5c90c6c9 100644
--- a/content/public/common/content_switches.cc
+++ b/content/public/common/content_switches.cc
@@ -695,11 +695,6 @@ const char kEnableWebViewSynchronousAPIs[] = "enable-webview-synchronous-apis";
 const char kChildCleanExit[]                = "child-clean-exit";
 #endif
 
-#if defined(OS_POSIX) && !defined(OS_MACOSX)
-// Specify the amount the trackpad should scroll by.
-const char kScrollPixels[]                  = "scroll-pixels";
-#endif
-
 #if defined(OS_MACOSX) || defined(OS_WIN)
 // Use the system SSL library (Secure Transport on Mac, SChannel on Windows)
 // instead of NSS for SSL.
Index: content/public/common/content_switches.h
diff --git a/content/public/common/content_switches.h b/content/public/common/content_switches.h
index e9c9352e16e4008d0baf587aedd745160814b576..e53c362158abcf61b7a0996ebd502ccff83ce3b2 100644
--- a/content/public/common/content_switches.h
+++ b/content/public/common/content_switches.h
@@ -224,10 +224,6 @@ extern const char kEnableWebViewSynchronousAPIs[];
 extern const char kChildCleanExit[];
 #endif
 
-#if defined(OS_POSIX) && !defined(OS_MACOSX)
-extern const char kScrollPixels[];
-#endif
-
 #if defined(OS_MACOSX) || defined(OS_WIN)
 extern const char kUseSystemSSL[];
 #endif
